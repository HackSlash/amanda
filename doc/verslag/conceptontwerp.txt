<h1>Conceptontwerp</h1>

<h2>Probleemvaststelling</h2>

Het huidge probleem met Amanda is een diaspora van patches (i.e., geen
referentie-implementatie van Amanda) en de afhankelijkheid op grafische
interfaces. Het basisdoel is om deze gebrekkigheden te verhelpen. De
afhankelijkheid van grafische interfaces is één van de meest primaire
problemen. De rationale is simpel: In drie maanden kun je geen betere terminal
schrijven dan bestaande terminals, en in drie maanden kun je geen betere text
editor schrijven dan bestaande text editors. Het maken van een Amanda IDE (text
editor + terminal) is het repliceren van betere software die al bestaat, voor
geen enkele goede reden. Het Unix-principe met het mandaat van “één programma
die één ding goed doet” ondersteunt dit.

Bij het vaststellen van een console-/terminalversie van Amanda werd het snel
duidelijk dat de huidige interactieve interpreter enige beperkingen heeft die
het gebruik sub-obtimaal maken. Er kunnen niet dynamisch functies aangemaakt
worden, en er kunnen geen multiline prompts gegeven worden. Deze beperkingen
zijn aanpasbaar in de broncode van Amanda.

<h3>Multiline prompts</h3>

Dit wordt initieel geïmplementeerd door weg te schrijven naar een bestand, en
dan functies uit het bestand te laden zodra ze aangeroepen worden. Nadat dit
(simpele) doel behaald is zal gebprobeert worden om de functie naar het geheugen
weg te schrijven, en vanuit het geheugen uitvoerbaar maken.

<h3>Dynamische functies</h3>

Dit is syntactisch iets moeilijker. Er is nog geen consensus, maar er moet een
manier komen die één van de twee dingen doet: Executable statements
onderschijden van functies óf functies onderschijden van executable statements.
Dit kan door middel van keywords en/of syntactische elementen.
